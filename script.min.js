document.addEventListener('DOMContentLoaded', function() {    const header = document.querySelector('header');  const heroSection = document.querySelector('.hero');    window.addEventListener('scroll', function() {    if (window.scrollY > 50) {      header.classList.add('scrolled');    } else {      header.classList.remove('scrolled');    }  });      const navLinks = document.querySelectorAll('nav a, .hero-buttons a, .cta a');    navLinks.forEach(link => {    link.addEventListener('click', function(e) {      const href = this.getAttribute('href');            if (href.startsWith('#')) {        e.preventDefault();        const targetId = href;        const targetElement = document.querySelector(targetId);                if (targetElement) {          const headerHeight = header.offsetHeight;          const targetPosition = targetElement.getBoundingClientRect().top + window.pageYOffset - headerHeight;                    window.scrollTo({            top: targetPosition,            behavior: 'smooth'          });        }      }    });  });      const contactForm = document.querySelector('.contact-form form');    if (contactForm) {    contactForm.addEventListener('submit', function(e) {      e.preventDefault();                  const nameInput = document.getElementById('name');      const emailInput = document.getElementById('email');      const messageInput = document.getElementById('message');                  let isValid = true;            if (!nameInput.value.trim()) {        showError(nameInput, 'Name is required');        isValid = false;      } else {        removeError(nameInput);      }            if (!emailInput.value.trim()) {        showError(emailInput, 'Email is required');        isValid = false;      } else if (!isValidEmail(emailInput.value)) {        showError(emailInput, 'Please enter a valid email');        isValid = false;      } else {        removeError(emailInput);      }            if (!messageInput.value.trim()) {        showError(messageInput, 'Message is required');        isValid = false;      } else {        removeError(messageInput);      }            if (isValid) {                const submitButton = contactForm.querySelector('button[type="submit"]');        const originalText = submitButton.textContent;                submitButton.disabled = true;        submitButton.textContent = 'Sending...';                        setTimeout(() => {                    contactForm.reset();                              const successMessage = document.createElement('div');          successMessage.className = 'success-message';          successMessage.textContent = 'Thank you! Your message has been sent successfully.';                    contactForm.appendChild(successMessage);                              submitButton.disabled = false;          submitButton.textContent = originalText;                              setTimeout(() => {            successMessage.remove();          }, 5000);        }, 1500);      }    });  }      function showError(input, message) {    const formGroup = input.parentElement;    let errorElement = formGroup.querySelector('.error-message');        if (!errorElement) {      errorElement = document.createElement('div');      errorElement.className = 'error-message';      formGroup.appendChild(errorElement);    }        errorElement.textContent = message;    formGroup.classList.add('error');  }    function removeError(input) {    const formGroup = input.parentElement;    const errorElement = formGroup.querySelector('.error-message');        if (errorElement) {      errorElement.remove();    }        formGroup.classList.remove('error');  }    function isValidEmail(email) {    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;    return emailRegex.test(email);  }      const serviceCards = document.querySelectorAll('.service-card');  const useCaseCards = document.querySelectorAll('.use-case-card');      function isInViewport(element) {    const rect = element.getBoundingClientRect();    const windowHeight = window.innerHeight || document.documentElement.clientHeight;    const windowWidth = window.innerWidth || document.documentElement.clientWidth;            return (      rect.bottom > 0 &&      rect.right > 0 &&      rect.top < windowHeight &&      rect.left < windowWidth    );  }      function handleScrollAnimation() {        serviceCards.forEach(card => {      if (isInViewport(card) && !card.classList.contains('animated')) {        card.classList.add('animated');        card.style.opacity = '1';        card.style.transform = 'translateY(0)';      }    });            useCaseCards.forEach((card, index) => {      if (isInViewport(card) && !card.classList.contains('animated')) {        setTimeout(() => {          card.classList.add('animated');          card.style.opacity = '1';          card.style.transform = 'translateY(0)';        }, index * 100);       }    });  }      const statCards = document.querySelectorAll('.stat-card');    function animateCounter(element, target, duration) {    let start = 0;    const increment = target / (duration / 16);     const counter = element.querySelector('.counter');        const timer = setInterval(() => {      start += increment;            if (start >= target) {        clearInterval(timer);        counter.textContent = target;      } else {        counter.textContent = Math.floor(start);      }    }, 16);  }    function handleCounterAnimation() {    statCards.forEach(card => {      if (isInViewport(card) && !card.classList.contains('counted')) {        card.classList.add('counted');        const target = parseInt(card.getAttribute('data-count'));                        let duration = 2000;         if (target > 500) duration = 2500;        if (target < 50) duration = 1500;                animateCounter(card, target, duration);      }    });  }      window.addEventListener('load', handleCounterAnimation);  window.addEventListener('scroll', handleCounterAnimation);      serviceCards.forEach(card => {    card.style.opacity = '0';    card.style.transform = 'translateY(20px)';    card.style.transition = 'opacity 0.5s ease, transform 0.5s ease';  });    useCaseCards.forEach(card => {    card.style.opacity = '0';    card.style.transform = 'translateY(20px)';    card.style.transition = 'opacity 0.5s ease, transform 0.5s ease';  });      window.addEventListener('load', handleScrollAnimation);  window.addEventListener('scroll', handleScrollAnimation);      const lazyBackgrounds = [    ...document.querySelectorAll('.ai-graphic'),    ...document.querySelectorAll('.team-graphic')  ].filter(Boolean);    if (lazyBackgrounds.length > 0) {        lazyBackgrounds.forEach(bg => {      bg.classList.add('lazy-load');    });            function handleLazyLoad() {      lazyBackgrounds.forEach(bg => {        if (isInViewport(bg) && !bg.classList.contains('loaded')) {                    setTimeout(() => {            bg.classList.add('loaded');          }, 100);        }      });    }            window.addEventListener('load', handleLazyLoad);    window.addEventListener('scroll', handleLazyLoad);  }      const style = document.createElement('style');  style.textContent = `    .form-group.error input,    .form-group.error textarea {      border-color: #ff3860;    }        .error-message {      color: #ff3860;      font-size: 0.9rem;      margin-top: 5px;    }        .success-message {      background-color: #23d160;      color: white;      padding: 15px;      border-radius: 5px;      margin-top: 20px;      text-align: center;    }        header.scrolled {      padding: 10px 0;      box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);    }  `;  document.head.appendChild(style);});